-- Copyright (C) 2025 NORCE Research AS
-- This deck was generated by pofff https://github.com/OPM/pofff
----------------------------------------------------------------------------
RUNSPEC
----------------------------------------------------------------------------
DIMENS 
${dic['noCells'][0]} ${dic['noCells'][1]} ${dic['noCells'][2]} /

EQLDIMS
/

TABDIMS
${dic['noSands']} /

WATER
GAS
CO2STORE
DISGASW
DIFFUSE

METRIC

START
1 JAN 2025 /

UNIFOUT
----------------------------------------------------------------------------
GRID
----------------------------------------------------------------------------
INIT

% if dic["grid"] == 'corner-point':
INCLUDE
'${dic['deck']}/GRID.INC' /
% elif dic["grid"] == 'tensor':
INCLUDE
'${dic['deck']}/DX.INC' /

DY 
${dic['noCells'][0]*dic['noCells'][1]*dic['noCells'][2]}*${dic['ymy'][1]} /

INCLUDE
DZ.INC /

TOPS
${dic['noCells'][0]}*0 /
% else:
DX 
${dic['noCells'][0]*dic['noCells'][1]*dic['noCells'][2]}*${dic['dsize'][0]} /

DY 
${dic['noCells'][0]*dic['noCells'][1]*dic['noCells'][2]}*${dic['dsize'][1]} /

DZ 
${dic['noCells'][0]*dic['noCells'][1]*dic['noCells'][2]}*${dic['dsize'][2]} /

TOPS
${dic['noCells'][0]}*0 /
% endif

INCLUDE
'${dic['deck']}/FLUXNUM.INC' /

DISPERC
${dic['noCells'][0]*dic['noCells'][1]*dic['noCells'][2]}*0 /

INCLUDE
EQUALREG.INC /

BCCON 
1 1 ${dic['noCells'][0]} 1 1 1 1 Z- /
/
% if "multpv" in dic:
INCLUDE
'${dic['deck']}/MULTPV.INC' /
INCLUDE
'${dic['deck']}/MULTX.INC' /
INCLUDE
'${dic['deck']}/MULTX-.INC' /
INCLUDE
'${dic['deck']}/MULTZ.INC' /
INCLUDE
'${dic['deck']}/MULTZ-.INC' /
% endif
% if "THICKNESSMULT" in dic:
----------------------------------------------------------------------------
EDIT
----------------------------------------------------------------------------
INCLUDE
THICKNESSMULT.INC /
% endif
----------------------------------------------------------------------------
PROPS
----------------------------------------------------------------------------
INCLUDE
TABLES.INC /
% if (dic["diffusion"][0] + dic["diffusion"][1]) > 0:

DIFFAWAT
${dic["diffusion"][0]} ${dic["diffusion"][0]} /

DIFFAGAS
${dic["diffusion"][1]} ${dic["diffusion"][1]} /
% endif

THCO2MIX
NONE NONE NONE /
----------------------------------------------------------------------------
REGIONS
----------------------------------------------------------------------------
COPY
FLUXNUM SATNUM /
/

INCLUDE
'${dic['deck']}/FIPNUM.INC' /
----------------------------------------------------------------------------
SOLUTION
----------------------------------------------------------------------------
EQUIL
0 ${dic['pressure']/1.E5} 0 0 0 0 1 1 0 /

RPTRST
BASIC=2 DEN PCGW RSWSAT /

RTEMPVD
0   ${dic["temperature"][1]}
${dic['dims'][2]} ${dic["temperature"][0]} /
----------------------------------------------------------------------------
SUMMARY
----------------------------------------------------------------------------
PERFORMA
FGIP
FGIR
FGIT
RGKDI
/
RGKDM
/
RGIP
/
RWCD
/
WBHP
/
WGIR
/
WGIT
/
BWPR
% for sensor in dic["sensorijk"]: 
${sensor[0]+1} ${sensor[1]+1} ${sensor[2]+1} /
% endfor
/
----------------------------------------------------------------------------
SCHEDULE
----------------------------------------------------------------------------
RPTRST
BASIC=2 DEN PCGW RESIDUAL RSWSAT /

INCLUDE
BCPROP.INC /
% for j in range(len(dic['inj'])):

% if dic["tuning"]:
TUNING
${dic['inj'][j][4]+" " if len(dic['inj'][j])>4 else ""}/
${dic['inj'][j][5]+" " if len(dic['inj'][j])>5 else ""}/
${dic['inj'][j][6]+" " if len(dic['inj'][j])>6 else ""}/
% endif
SOURCE
% for i in range(len(dic['wellijk'])):
${dic['wellijk'][i][0]} ${dic['wellijk'][i][1]} ${dic['wellijk'][i][2]} GAS ${f"{dic['inj'][j][2+i] * 86400:E}"} /
% endfor
/
TSTEP
${f"{round(dic['inj'][j][0]/dic['inj'][j][1])}*" if round(dic['inj'][j][0]/dic['inj'][j][1]) > 1 else ""}${dic['inj'][j][1] / 86400.} /
% endfor